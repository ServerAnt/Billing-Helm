{{- if or ( gt .Capabilities.KubeVersion.Major "1" ) ( ge .Capabilities.KubeVersion.Minor "19" ) }}
apiVersion: networking.k8s.io/v1
{{- else }}
apiVersion: networking.k8s.io/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: homeport-ingress
  annotations:
    {{ $customSentryUrl443 := "" }}
    {{ $customSentryUrl80 := "" }}
    {{ if .Values.waldur.homeport.customSentryURL }}
      {{ $customSentryUrl443 = (print .Values.waldur.homeport.customSentryURL ":443") }}
      {{ $customSentryUrl80 = (print .Values.waldur.homeport.customSentryURL ":80") }}
    {{ end }}
    {{ if eq .Values.ingress.className "nginx" }}
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,sentry-trace,baggage,X-Impersonated-User-Uuid"
    nginx.ingress.kubernetes.io/cors-expose-headers: "Link, X-Result-Count"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    {{/*
    SECURITY: Content-Security-Policy (CSP) header configuration
    Using custom-headers annotation to safely add security headers including:
    - base-uri 'self': Prevents <base> tag injection attacks
    - object-src 'none': Blocks Flash/Java plugins  
    - media-src 'none': Blocks <audio>/<video> elements
    - script-src: Allows JS only from self, Sentry error tracking, and Matomo analytics
    - style-src: Allows CSS from self and inline styles (required for React components)
    - img-src: Allows images from self, OpenStreetMap tiles, API, and data URIs
    - connect-src: Restricts AJAX/WebSocket to self, API, analytics, geocoding, and error tracking
    - font-src: Allows fonts from self and data URIs
    - frame-src/frame-ancestors 'none': Prevents clickjacking attacks
    */}}
    nginx.ingress.kubernetes.io/custom-headers: "{{ .Release.Namespace }}/waldur-security-headers"
    {{ if .Values.ingress.whitelistSourceRange }}
    nginx.ingress.kubernetes.io/whitelist-source-range: "{{ .Values.ingress.whitelistSourceRange }}"
    {{ end }}
    {{ else if or (eq .Values.ingress.className "openshift-default") (eq .Values.ingress.className "haproxy") }}
    haproxy.org/cors-enable: "true"
    haproxy.org/path-rewrite: "/"
    haproxy.org/cors-allow-headers: "DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,sentry-trace,baggage,X-Impersonated-User-Uuid"
    haproxy.org/cors-expose-headers: "Link, X-Result-Count"
    haproxy.org/ssl-redirect: "true"
    haproxy.org/backend-config-snippet: |
      http-response set-header "Content-Security-Policy: base-uri 'self'; object-src 'none'; media-src 'none'; script-src 'self' sentry.opnd.org {{ .Values.waldur.homeport.customSentryURL }} {{ .Values.waldur.homeport.matomoUrlBase }}; style-src 'self' 'unsafe-inline'; img-src 'self' *.tile.openstreetmap.org {{ .Values.apiHostname }} blob: data: ; connect-src 'self' {{ .Values.apiHostname }} {{ .Values.waldur.homeport.matomoUrlBase }} nominatim.openstreetmap.org:443 sentry.opnd.org:443 sentry.opnd.org:80 {{ $customSentryUrl80 }} {{ $customSentryUrl443 }}; font-src 'self' data: ; frame-src 'none'; frame-ancestors 'none'";
    {{ if .Values.ingress.whitelistSourceRange }}
    haproxy.org/whitelist: "{{ .Values.ingress.whitelistSourceRange }}"
    {{ end }}
    {{ end }}
    {{ if and .Values.ingress.tls.enabled (eq .Values.ingress.tls.source "letsEncrypt") }}
    cert-manager.io/cluster-issuer: letsencrypt-prod-issuer
    {{ end }}
spec:
  {{ if .Values.ingress.className }}
  ingressClassName: {{ .Values.ingress.className | quote }}
  {{ end }}
  rules:
  - host: {{ .Values.homeportHostname }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: waldur-homeport
            port:
              number: 80
  {{ if .Values.homeportExtraHosts }}
  {{- range .Values.homeportExtraHosts }}
  - host: {{ . }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: waldur-homeport
            port:
              number: 80
  {{- end }}
  {{ end }}
  {{ if and .Values.ingress.tls.enabled }}
  tls:
  - hosts:
    - {{ .Values.homeportHostname }}
    {{ if .Values.homeportExtraHosts }}
    {{- range .Values.homeportExtraHosts }}
    - {{ . }}
    {{- end }}
    {{ end }}
    {{ if .Values.ingress.tls.customHomeportSecretName }}
    secretName: {{ .Values.ingress.tls.customHomeportSecretName | quote }}
    {{ else }}
    secretName: homeport-certificate
    {{ end }}
  {{ end }}
