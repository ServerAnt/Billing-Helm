apiVersion: apps/v1
kind: Deployment
metadata:
  name: waldur-mastermind-api
  labels:
{{ include "waldur.labels" . | indent 4 }}
spec:
  {{ if .Values.extraReplicas.api }}
  replicas: {{ add .Values.replicaCount .Values.extraReplicas.api }}
  {{ else }}
  replicas: {{ .Values.replicaCount }}
  {{ end }}
  selector:
    matchLabels:
      app: waldur-mastermind-api
  template:
    metadata:
      labels:
        app: waldur-mastermind-api
    spec:
      containers:
        - name: waldur-mastermind-api
          image: opennode/waldur-mastermind:{{ .Values.waldur.imageTag }}
          args:
            - "mastermind"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
          - name: GLOBAL_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: waldur-secret
                key: GLOBAL_SECRET_KEY
          - name: POSTGRESQL_HOST
            value: {{ template "waldur.postgresql.host" . }}
          - name: POSTGRESQL_PORT
            value: {{ template "waldur.postgresql.port" . }}
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                name: {{ template "waldur.postgresql.secret" . }}
                key: username
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "waldur.postgresql.secret" . }}
                key: password
          - name: POSTGRESQL_NAME
            value: {{ template "waldur.postgresql.dbname" . }}
          - name: REDIS_HOST
            value: {{ template "waldur.redis.host" . }}
          - name: REDIS_PORT
            value: {{ template "waldur.redis.port" . }}
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
              {{- if .Values.redis.existingSecret }}
                name: {{ .Values.redis.existingSecret }}
              {{- else }}
                name: {{ template "waldur.redis.secret" . }}
              {{- end }}
                key: {{ template "waldur.redis.secretKey" . }}
          resources:
            {{ if .Values.hpa.api.enabled }}
            {{- toYaml .Values.hpa.api.resources | nindent 12 }}
            {{ else }}
            {{- toYaml .Values.resources | nindent 12 }}
            {{ end }}
          volumeMounts:
            - name: api-core
              mountPath: /etc/waldur/core.ini
              subPath: core.ini
            - name: api-override
              mountPath: /etc/waldur/override.conf.py
              subPath: override.conf.py
            - name: api-celery
              mountPath: /etc/waldur/celery.conf
              subPath: celery.conf
            - name: api-uwsgi
              mountPath: /etc/waldur/uwsgi.ini
              subPath: uwsgi.ini
            {{ $templatesPath := .Values.waldur.mastermindTemplating.mastermindTemplatesPath }}
            {{ $templatesRoot := $templatesPath | printf "%s/"}}
            {{ $templatesPathPattern := $templatesPath | printf "%s/**" }}
            {{ range $path, $_ :=  .Files.Glob $templatesPathPattern }}
            - name: waldur-mastermind-template
              mountPath: {{ $path | replace $templatesRoot "" | printf "/usr/src/waldur/src/%s" }}
              subPath: {{ $path | base }}
            {{ end }}
            {{ if .Values.waldur.saml2.enabled }}
            - name: waldur-saml2
              mountPath: /etc/waldur/saml2
            - name: waldur-saml2-attr-maps
              mountPath: /etc/waldur/saml2/attribute-maps
            - name: waldur-saml2-cron
              mountPath: /etc/cron.hourly
            {{ end }}
        {{ if .Values.logManagement.enabled }}
            - name: waldur-log
              mountPath: /var/log/waldur
        - name: fluentd
          image: fluent/fluentd-kubernetes-daemonset:v1.11.0-debian-elasticsearch7-1.0
          imagePullPolicy: IfNotPresent
          env:
            - name:  FLUENT_ELASTICSEARCH_HOST
              value: {{ .Values.logManagement.elasticHost | quote }}
            - name:  FLUENT_ELASTICSEARCH_PORT
              value: {{ .Values.logManagement.elasticPort | quote }}
            - name: FLUENT_ELASTICSEARCH_SCHEME
              value: {{ .Values.logManagement.elasticProtocol | quote }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: waldur-log
              mountPath: /var/log/waldur
            - name: fluentd-conf
              mountPath: /fluentd/etc
        {{ end }}
      volumes:
      - name: api-core
        configMap:
          name: api-core-config
      - name: api-override
        configMap:
          name: api-override-config
      - name: api-celery
        configMap:
          name: api-celery-config
      - name: api-uwsgi
        configMap:
          name: api-uwsgi-config
      - name: waldur-mastermind-template
        configMap:
          name: mastermind-template-config
      {{ if .Values.logManagement.enabled }}
      - name: waldur-log
        emptyDir: {}
      - name: fluentd-conf
        configMap:
          name: fluentd-config
      {{ end }}
      {{ if .Values.waldur.saml2.enabled }}
      - name: waldur-saml2
        secret:
          secretName: waldur-saml2-secret
      - name: waldur-saml2-attr-maps
        configMap:
          name: waldur-saml2-attr-maps-config
      - name: waldur-saml2-cron
        configMap:
          name: waldur-saml2-cron-config
      {{ end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
