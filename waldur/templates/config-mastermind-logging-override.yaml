apiVersion: v1
kind: ConfigMap
metadata:
  name: mastermind-logging-override-config
data:
  beat: |-
    #!/bin/bash
    set -e

    echo "INFO: Running Celery Beat..."
    source /etc/waldur/celery.conf
    mkdir -p /run/waldur/celerybeat
    chown -R waldur:waldur /run/waldur/celerybeat
    cd /run/waldur/celerybeat
    gosu waldur sh -c "celery -A $CELERY_APP beat --loglevel=$CELERYBEAT_LOG_LEVEL --pidfile=$CELERYBEAT_PID_FILE $CELERYBEAT_OPTS"

    exit 0
  worker: |-
    #!/bin/bash
    set -e

    echo "INFO: Running Celery Worker..."
    source /etc/waldur/celery.conf
    mkdir -p /run/waldur/celery
    chown -R waldur:waldur /run/waldur/celery
    gosu waldur sh -c "celery -A $CELERY_APP worker --concurrency=$CELERYD_CONCURRENCY --loglevel=$CELERYD_LOG_LEVEL --pidfile=$CELERYD_PID_FILE $CELERYD_OPTS"

    exit 0
  uwsgi.ini: |-
    # Waldur uWSGI configuration file
    #
    # See also: http://uwsgi-docs.readthedocs.io/en/latest/Configuration.html#ini-files

    [uwsgi]
    buffer-size = 8192
    chmod-socket = 666
    enable-metrics = true
    gid = waldur
    # delegate logging to master process
    log-master = true
    # disable uWSGI standard logging
    disable-logging = true
    # ensure that critical errors are always logged
    log-4xx = true
    log-5xx = true
    module = waldur_core.server.wsgi:application
    plugins = python38
    processes = 8
    socket = :8000  # avoid localhost to fix binding issue
    static-map = /static=/usr/share/waldur/static
    static-map = /media=/var/lib/waldur/media
    uid = waldur
    enable-threads = true  # required by sentry-sdk

    http-socket = :8080
    http-enable-proxy-protocol = 1
    http-auto-chunked = true
    http-keepalive = 75
    http-timeout = 75
    offload-threads = $(UWSGI_OFFLOAD_THREADS)

    add-header = Access-Control-Allow-Credentials: true
    add-header = Access-Control-Allow-Headers: Accept, Accept-Encoding, Authorization, Content-Type, Origin, User-Agent, X-CSRFToken, X-Requested-With
    add-header = Access-Control-Allow-Methods: DELETE, GET, OPTIONS, PATCH, POST, PUT
    add-header = Access-Control-Allow-Origin: *
    add-header = Access-Control-Expose-Headers: Link, X-Result-Count
    add-header = Connection: Keep-Alive
  logging.conf.py: |-
    import sys


    LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,

        'formatters': {
            'simple': {
                'format': '%(asctime)s %(levelname)s %(message)s',
            },
        },

        'handlers': {
            'console': {
                'class': 'logging.StreamHandler',
                'formatter': 'simple',
                'level': 'DEBUG',
                'stream': sys.stdout,
            },
        },

        'root': {
            'level': 'DEBUG',
            'handlers': ['console'],
        },
    }
