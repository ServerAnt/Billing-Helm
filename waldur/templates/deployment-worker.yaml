apiVersion: apps/v1
kind: Deployment
metadata:
  name: waldur-mastermind-worker
  labels:
{{ include "waldur.labels" . | indent 4 }}
spec:
  {{ if .Values.extraReplicas.celery }}
  replicas: {{ add .Values.replicaCount .Values.extraReplicas.celery }}
  {{ else }}
  replicas: {{ .Values.replicaCount }}
  {{ end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "waldur.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "waldur.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: waldur-mastermind-worker
          image: opennode/waldur-mastermind:{{ .Values.waldur.imageTag }}
          args:
            - "worker"
          livenessProbe:
            exec:
              command:
                - "/bin/bash"
                - "-c"
                - "celery inspect -q -A waldur_core.server -d celery@$HOSTNAME ping"
            initialDelaySeconds: 15
            periodSeconds: 15
            timeoutSeconds: 10
          readinessProbe:
            exec:
              command:
                - "/bin/bash"
                - "-c"
                - "celery inspect -q -A waldur_core.server -d celery@$HOSTNAME ping"
            initialDelaySeconds: 20
            periodSeconds: 15
            timeoutSeconds: 10
          env:
          - name: GLOBAL_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: waldur-secret
                key: GLOBAL_SECRET_KEY
          - name: POSTGRESQL_HOST
            value: {{ template "waldur.postgresql.host" . }}
          - name: POSTGRESQL_PORT
            value: {{ template "waldur.postgresql.port" . }}
          - name: POSTGRESQL_USER
            value: {{ default "waldur" .Values.postgresql.postgresqlUsername | quote }}
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
              {{- if .Values.postgresql.existingSecret }}
                name: {{ .Values.postgresql.existingSecret }}
              {{- else }}
                name: {{ template "waldur.postgresql.secret" . }}
              {{- end }}
                key: {{ template "waldur.postgresql.secretKey" . }}
          - name: POSTGRESQL_NAME
            value: {{ default "waldur" .Values.postgresql.postgresqlDatabase | quote }}
          - name: REDIS_HOST
            value: {{ template "waldur.redis.host" . }}
          - name: REDIS_PORT
            value: {{ template "waldur.redis.port" . }}
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
              {{- if .Values.redis.existingSecret }}
                name: {{ .Values.redis.existingSecret }}
              {{- else }}
                name: {{ template "waldur.redis.secret" . }}
              {{- end }}
                key: {{ template "waldur.redis.secretKey" . }}
          resources:
            {{ if .Values.hpa.celery.enabled | eq "yes" }}
            {{- toYaml .Values.hpa.celery.workerResources | nindent 12 }}
            {{ else }}
            {{- toYaml .Values.resources | nindent 12 }}
            {{ end }}
          volumeMounts:
          {{- if .Values.persistence.enabled }}
            - name: media
              mountPath: /var/lib/waldur/
              subPath: {{ .Values.persistence.subPath | default "" }}
          {{- end }}
            - name: api-core
              mountPath: /etc/waldur/core.ini
              subPath: core.ini
            - name: api-override
              mountPath: /etc/waldur/override.conf.py
              subPath: override.conf.py
            - name: api-celery
              mountPath: /etc/waldur/celery.conf
              subPath: celery.conf
            - name: api-uwsgi
              mountPath: /etc/waldur/uwsgi.ini
              subPath: uwsgi.ini
      volumes:
      {{- if .Values.persistence.enabled }}
      - name: media
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default (include "waldur.fullname" .) }}
      {{- end }}
      - name: api-core
        configMap:
          name: api-core-config
      - name: api-override
        configMap:
          name: api-override-config
      - name: api-celery
        configMap:
          name: api-celery-config
      - name: api-uwsgi
        configMap:
          name: api-uwsgi-config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
