apiVersion: batch/v1
kind: Job
metadata:
  name: waldur-mastermind-job
  labels:
{{ include "waldur.labels" . | indent 4 }}
spec:
  template:
    metadata:
      annotations:
        "helm.sh/hook": post-install, post-upgrade
        "helm.sh/hook-weight": "0"
        "helm.sh/hook-delete-policy": hook-succeeded, hook-failed
    spec:
      initContainers:
      - name: check-db-ready
        image: postgres:9.6.5
        command: ['sh', '-c',
          'until pg_isready -h $POSTGRESQL_HOST -p $POSTGRESQL_PORT; 
          do echo waiting for database; sleep 2; done;']
        env:
          - name: POSTGRESQL_HOST
            value: {{ template "waldur.postgresql.host" . }}
          - name: POSTGRESQL_PORT
            value: {{ template "waldur.postgresql.port" . }}
      containers:
        - name: waldur-mastermind-job
          image: opennode/waldur-mastermind:{{ .Values.waldur.imageTag }}
          args:
            - initdb
          env:
          - name: GLOBAL_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: waldur-secret
                key: GLOBAL_SECRET_KEY
          - name: POSTGRESQL_HOST
            value: {{ template "waldur.postgresql.host" . }}
          - name: POSTGRESQL_PORT
            value: {{ template "waldur.postgresql.port" . }}
          - name: POSTGRESQL_USER
            value: {{ default "waldur" .Values.postgresql.postgresqlUsername | quote }}
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
              {{- if .Values.postgresql.existingSecret }}
                name: {{ .Values.postgresql.existingSecret }}
              {{- else }}
                name: {{ template "waldur.postgresql.secret" . }}
              {{- end }}
                key: {{ template "waldur.postgresql.secretKey" . }}
          - name: POSTGRESQL_NAME
            value: {{ default "waldur" .Values.postgresql.postgresqlDatabase | quote }}
          - name: REDIS_HOST
            value: {{ template "waldur.redis.host" . }}
          - name: REDIS_PORT
            value: {{ template "waldur.redis.port" . }}
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
              {{- if .Values.redis.existingSecret }}
                name: {{ .Values.redis.existingSecret }}
              {{- else }}
                name: {{ template "waldur.redis.secret" . }}
              {{- end }}
                key: {{ template "waldur.redis.secretKey" . }}
          volumeMounts:
            - name: api-core
              mountPath: /etc/waldur/core.ini
              subPath: core.ini
            - name: api-override
              mountPath: /etc/waldur/override.conf.py
              subPath: override.conf.py
            - name: api-celery
              mountPath: /etc/waldur/celery.conf
              subPath: celery.conf
            - name: api-uwsgi
              mountPath: /etc/waldur/uwsgi.ini
              subPath: uwsgi.ini
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: api-core
        configMap:
          name: api-core-config
      - name: api-override
        configMap:
          name: api-override-config
      - name: api-celery
        configMap:
          name: api-celery-config
      - name: api-uwsgi
        configMap:
          name: api-uwsgi-config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      restartPolicy: "Never"
